// Border Radius
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  border-radius: $radius;
}
@mixin border-radius-top-left($radius) {
  -webkit-border-top-left-radius: $radius;
  -moz-border-radius-topleft: $radius;
  border-top-left-radius: $radius;
}
@mixin border-radius-top-right($radius) {
  -webkit-border-top-right-radius: $radius;
  -moz-border-radius-topright: $radius;
  border-top-right-radius: $radius;
}
@mixin border-radius-bottom-left($radius) {
  -webkit-border-bottom-left-radius: $radius;
  -moz-border-radius-bottomleft: $radius;
  border-bottom-left-radius: $radius;
}
@mixin border-radius-bottom-right($radius) {
  -webkit-border-bottom-right-radius: $radius;
  -moz-border-radius-bottomright: $radius;
  border-bottom-right-radius: $radius;
}
@mixin image-circle() {
  -webkit-border-radius: 50%;
  -moz-border-radius: 50%;
  border-radius: 50%;
}

// Box Shadow
@mixin box-shadow($props) {
  -webkit-box-shadow: $props;
  -moz-box-shadow: $props;
  box-shadow: $props;
}

// Columns
@mixin columns($cols) {
  -webkit-column-count: $cols;
  -moz-column-count: $cols;
  column-count: $cols;
}

// Buttons
@mixin custom-bootstrap-btn($name: 'default', $background-color: #000000, $color: null) {

  .btn-#{$name} {

    @if $color != null { color: $color; }
    background-color: $background-color;
    border-color: darken($background-color, 6%);

    &:hover,
    &:focus,
    &:active {
      @if $color != null { color: $color; }
      background-color: darken($background-color, 10%);
      border-color: darken($background-color, 12%);
    }

    &:active {
      background-color: lighten($background-color, 10%);
    }

  }

}

// Animations
@mixin animation($name: fadeIn, $duration: 1s, $function: ease) {
  -webkit-animation: $name $duration $function;
  animation: $name $duration $function;
}
@mixin transition($property: all, $duration: 1s, $function: ease) {
  -webkit-transition: $property $duration $function;
  transition: $property $duration $function;
}
@mixin transform($props) {
  -webkit-transform: $props;
  -moz-transform: $props;
  -ms-transform: $props;
  -o-transform: $props;
  transform: $props;
}

// Media Queries
@mixin min($width) {
  @media all and (min-width: $width) {
    @content;
  }
}
@mixin max($width) {
  @media all and (max-width: $width) {
    @content;
  }
}
@mixin between($min-width, $max-width) {
  @media all and (min-width: $min-width) and (max-width: $max-width) {
    @content;
  }
}
@mixin highres() {
  @media all and (-webkit-min-device-pixel-ratio: 1.5) {
    @content;
  }
}
