<%
if !@venue.yelpid.blank?
	#http://parabuzzle.github.io/yelp4rails/
	yelp_keys = {
		:consumer_key => ENV['YELP_CONSUMER_KEY'],
		:consumer_secret => ENV['YELP_CONSUMER_SECRET'],
		:token => ENV['YELP_TOKEN'],
		:token_secret => ENV['YELP_TOKEN_SECRET']
	}
	@yelpSearch = YelpApi.new(yelp_keys).search_by_business_id(@venue.yelpid)
end
%>
<section id="">
	<div class="container">
		<div class="row">
			<div class="col-sm-12">
				<h2><%= @venue.name %></h2>
				<%= link_to venues_path, title: 'Back', class: 'btn btn-primary' do %><i class="fa fa-undo left"></i>Back<% end %>&nbsp;<%= link_to edit_venue_path(@venue), title: 'Edit', class: 'btn btn-warning' do %><i class="fa fa-pencil left"></i>Edit<% end %>
				
				<% if user_signed_in? %>
					<% if !@venue.tries.where(user_id: current_user.id).empty? %>
						<% @thisTry = @venue.tries.where(user_id: current_user.id).first %>
						<%= link_to try_path(@thisTry), title: 'Delete', method: :delete, class: 'btn btn-danger' do %><i class="fa fa-minus left"></i>To Try<% end %>
					<% else %>
						<a id="totrysubmit" href="#" class="btn btn-danger"><i class="fa fa-plus left"></i>To Try</a>
						<%= form_for([@venue, @venue.tries.build]) do |f| %>
							<% f.hidden_field :user_id, value: current_user.id %>
						<% end %>
					<% end %>
				<% end %>
				
				<div class="row">
					<div class="col-sm-6">
						<% if !@venue.url.blank? %>
							<!--<p><a href="<%= @venue.url %>"><%= @venue.url %></a></p>-->
						<% end %>
						<p><%= Venuetype.find(@venue.typeid).name %></p>
						<%
							if !@venue.yelpid.blank?
								@addressWorking = @yelpSearch['location']['address'][0] + ' ' + @yelpSearch['location']['city'] + ' ' + @yelpSearch['location']['state_code']
							else
								if !@venue.street.blank?
									@addressWorking = @venue.fulladdress_withname
								else
									@addressWorking = ''
								end
							end
						%>
						<address>
							<% if current_user.try(:hasaddress) %>
							<a href="http://www.google.com/maps/dir/<%= to_url(current_user.fulladdress) %>/<%= to_url(@venue.name + ' ') %><%= to_url(@addressWorking) %>/"><%= @yelpSearch['location']['address'][0] %><br/><%= @yelpSearch['location']['city'] %>, <%= @yelpSearch['location']['state_code'] %></a>
							<% else %>
							<a href="http://maps.google.com/maps?q=<%= to_url(@venue.name + ' ') %><%= to_url(@addressWorking) %>"><%= @venue.street %><br/><%= @venue.city %>, <%= @venue.state %></a>
							<% end %>
						</address>
						<div class="row">
							<% if !@venue.yelpid.blank? %>
							<div class="col-md-4">
								<p><a href="<%= @yelpSearch['url'] %>">Yelp Rating</a><br><span class="red"><%= render_stars(@yelpSearch['rating']) %></span></p>
							</div>
							<% end %>
							<% if !@venue.ratings.empty? %>
							<div class="col-md-4">
								<p>Our Rating<br><span id="ourrating"><%= render_stars(@venue.ratings.average('rating')) %></span></p>
							</div>
							<% end %>
							<% if user_signed_in? %>
							<div class="col-md-4">
								<p>My Rating<br>
									<% if !@venue.ratings.where(raterid: current_user.id).empty? %>
										<span id="myrating"><%= render_stars(@venue.ratings.where(raterid: current_user.id).sum('rating')) %></span>
										<% @thisRating = @venue.ratings.where(raterid: current_user.id).first %>
										<%= form_for @thisRating, :remote => true do |f| %>
											<%= f.hidden_field :rating %>
										<% end %>
									<% else %>
										<span id="myrating"><%= render_stars(0) %></span>
										<%= form_for([@venue, @venue.ratings.build]) do |f| %>
											<%= f.hidden_field :rating %>
										<% end %>
									<% end %>
								</p>
							</div>
							<% end %>
						</div>
						<!--<%= @yelpSearch %>-->
						
						<% if !@venue.price.nil? %>
						<p>Price:<br><%= render_price(@venue.price) %></p>
						<% end %>
						<% if @venue.byob %>
						<p><i class="fa fa-beer left"></i>BYOB</p>
						<% end %>
						<% if @venue.craftbeer %>
						<p><i class="fa fa-check left"></i>Craft Beer</p>
						<% end %>
						<% if @venue.cocktails %>
						<p><i class="fa fa-glass left"></i>Cocktails</p>
						<% end %>
						<% if @venue.latenight %>
						<p><i class="fa fa-check left"></i>Late Night</p>
						<% end %>
					</div>
					<div class="col-sm-6">
						<h2>Comments</h2>
						<% @venue.comments.each do |comment| %>
						<div class="comment">
							<div class="comment-user-info">
								<img class="user-avatar user-avatar-thumb" src="<%= User.find(comment.commenterid).avatar %>">
						    <%= User.find(comment.commenterid).fullname %>
							</div>
							<div class="well well-sm">
								<% if current_user.try && comment.commenterid == current_user.id %>
								<%= link_to comment_path(comment), method: :delete, data: { confirm: "Are you sure you would like to delete this comment?" } do %><button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button><% end %>
								<% end %>
								<%= simple_format(comment.body) %>
							</div>
						</div>
						<% end %>
						<% if user_signed_in? %>
							<%= form_for([@venue, @venue.comments.build]) do |f| %>
								<%= f.text_area :body, { :class => 'form-control', :required => 'required', :placeholder => 'Great appetizers! I highly recommend...' } %>
							  <button type="submit" class="btn btn-block btn-success">Post Comment</button>
							<% end %>
						<% else %>
						<p>You must be <%= link_to "signed in", new_user_session_path %> to comment.</p>
						<% end %>
					</div>
				</div>
			</div>
		</div>
	</div>
</section>

<script type="text/javascript">
jQuery(document).ready(function($) {
	
	
	/* Rating */
	var myratingHTML = $('#myrating').html();
	
	$('#myrating i.fa').click(function() {
		var thisClickIndex = $('#myrating i.fa').index(this) + 1;
		$('input#rating_rating').val(thisClickIndex);
		$('form.edit_rating, form.new_rating').submit();
		$('form.edit_rating, form.new_rating').bind('ajax:complete', function() {
			$.get(window.location.pathname + '/rating_average', function(data) {
				var newRatingIndex = $('#ourrating i.fa').index(data.rating_average);
				changeRatingStars('#ourrating', data.rating_average - 1);
			});
		});
		
		myratingHTML = $('#myrating').html();
		
	});
	
	$('#myrating i.fa').hover(function() {
		var thisClickIndex = $('#myrating i.fa').index(this);
		changeRatingStars('#myrating', thisClickIndex);
	}, function() {
	});
	
	/* To Try toggle */
	$('#totrysubmit').click(function(e) {
		e.preventDefault();
		$('form#new_try').submit();
	});
	
});

function changeRatingStars(whichStars, starNum) {
	var thisStar = $(whichStars + ' i.fa:eq(' + starNum + ')');
	thisStar.removeClass().addClass('fa fa-star');
	thisStar.prevAll(whichStars + ' i.fa').removeClass().addClass('fa fa-star');
	thisStar.nextAll(whichStars + ' i.fa').removeClass().addClass('fa fa-star-o');
}
</script>